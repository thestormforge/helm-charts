# Default values for optimize-live.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

component:
  image:
    controller:
      repository: registry.stormforge.io/optimize-live/controller
      pullPolicy: IfNotPresent
      tag: 0.0.18
    tsdb:
      repository: registry.stormforge.io/optimize-live/tsdb
      pullPolicy: IfNotPresent
      tag: 0.0.11
    applier:
      repository: registry.stormforge.io/optimize-live/applier
      pullPolicy: IfNotPresent
      tag: 0.0.5
    recommender:
      repository: registry.stormforge.io/optimize-live/recommender
      pullPolicy: IfNotPresent
      tag: 0.3.2
    grafana:
      repository: grafana/grafana-oss
      pullPolicy: IfNotPresent
      tag: 8.5.4
  resources:
    tsdb: {}
    applier: {}
    recommender:
      # Applications with a large number of autoscaling targets may require increased requests
      # If needing to unset resources, you can use "cpu: null" or "memory: null" in overrides when installing
      limits:
        cpu: 2000m
        memory: 4Gi
      requests:
        cpu: 100m
        memory: 2Gi
    grafana: {}

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
defaultNamespace: stormforge-system

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

rbac:
  clusterRole:
    create: true
    name: ""
  clusterRoleBinding:
    create: true
    name: ""

imageCredentials:
  registry: registry.stormforge.io
  username: ""
  password: ""

stormforge:
  address: https://api.stormforge.io/

authorization:
  issuer: https://api.stormforge.io/
  clientID: ""
  clientSecret: ""

# metricsURL should be used to set the URL of the prometheus server
# that should be scraped to fetch metrics.
# When using DataDog or another external metrics provider, this field
# should be left at the default ""
metricsURL: ""

podAnnotations: {}

podSecurityContext: {}

securityContext:
  runAsNonRoot: true

# extraEnvVars can be used to set things like:
# HTTP_PROXY/HTTPS_PROXY/NO_PROXY
# DD_API_KEY/DD_APP_KEY/DD_SITE
# This can also be set through the stormforge cli via
# `stormforge config set controller.<environment>.env.HTTP_PROXY http://my.proxy.example`
extraEnvVars: []

resources: {}
  # limits:
  #   cpu: 500m
  #   memory: 128Mi
  # requests:
  #   cpu: 10m
  #   memory: 64Mi

nodeSelector: {}

tolerations: []

affinity: {}

livenessProbe:
  httpGet:
    path: /healthz
    port: 8081
  initialDelaySeconds: 15
  periodSeconds: 20

readinessProbe:
  httpGet:
    path: /readyz
    port: 8081
  initialDelaySeconds: 5
  periodSeconds: 10

# Override the default storage class for pv creation
# It is strongly encouraged to use `xfs` as the backing filesystem
# to avoid inode exhaustion.
storageClass: ""

 # pvcSize dictates how large of a PVC should be requested.
 # This defaults to 10G
pvcSize: ""

debug: false
